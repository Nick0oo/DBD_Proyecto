#creamos y Usamos la Bd
drop database proyecto;
create database proyecto;
use proyecto;

CREATE TABLE type_document(
    id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(2) NOT NULL UNIQUE,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE users(
	id INT PRIMARY KEY AUTO_INCREMENT,
	`name` VARCHAR (255),
	email VARCHAR(255) UNIQUE,
	`password` VARCHAR (255) UNIQUE,
	createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE roles(
	id INT PRIMARY KEY AUTO_INCREMENT,
	`name` VARCHAR (255) UNIQUE,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE people (
    id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255) NOT NULL,
    lastName VARCHAR(255),
    phone VARCHAR(255),
    birthday DATE,
    document INT UNIQUE,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT,  
    updated_by INT,  
    idTypeDocument INT DEFAULT NULL,
    FOREIGN KEY (idTypeDocument) REFERENCES type_document(id),
    idUser INT,
    FOREIGN KEY (idUser) REFERENCES users(id)
);

CREATE TABLE usersRoles(
	id INT PRIMARY KEY AUTO_INCREMENT,
	idUser INT,
	FOREIGN KEY (idUser) REFERENCES users(id),
	idRole INT,
	FOREIGN KEY (idRole) REFERENCES roles(id),
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE productCategories (
    id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255) UNIQUE NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE products (
    id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255) NOT NULL,
    details TEXT,
    price DECIMAL(20, 0) NOT NULL,
    idProductCategory INT,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (idProductCategory) REFERENCES productCategories(id)
);

CREATE TABLE reserveStates (
    id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255) UNIQUE NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE reserves (
    id INT PRIMARY KEY AUTO_INCREMENT,
    idState INT,
    `time` TIME,  
    dateReserve DATE,
    idUser INT,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT, 
    updated_by INT,  
    FOREIGN KEY (idUser) REFERENCES people(id),
    FOREIGN KEY (idState) REFERENCES reserveStates(id)
);

CREATE TABLE paymentMethods (
    id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255) UNIQUE NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE discount (
id INT PRIMARY KEY AUTO_INCREMENT,
total INT
);

CREATE TABLE payment (
    id INT PRIMARY KEY AUTO_INCREMENT,
    idmethod INT,
    date_pay DATE,
    totalPaid DECIMAL(10, 2) NOT NULL, -- #Precio*cantidad 
    idDiscount INT,
    idReserve INT,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT,  
    updated_by INT, 
    FOREIGN KEY (idReserve) REFERENCES reserves(id),
    FOREIGN KEY (idMethod) REFERENCES paymentMethods(id),
    FOREIGN KEY (idDiscount) REFERENCES discount(id)
);
CREATE TABLE reserveProducts (
    id INT PRIMARY KEY AUTO_INCREMENT,
    idReserve INT,
    idProduct INT,
    quantity INT NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (idReserve) REFERENCES reserves(id),
    FOREIGN KEY (idProduct) REFERENCES products(id)
    );
    





