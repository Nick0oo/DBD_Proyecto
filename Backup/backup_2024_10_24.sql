#creamos y Usamos la Bd
drop database proyecto;
create database proyecto;
use proyecto;

CREATE TABLE type_document(
    id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(2) NOT NULL UNIQUE,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE users(
	id INT PRIMARY KEY AUTO_INCREMENT,
	email VARCHAR(255) UNIQUE,
	`password` VARCHAR (255) UNIQUE,
	createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE roles(
	id INT PRIMARY KEY AUTO_INCREMENT,
	`name` VARCHAR (255) UNIQUE,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE typePhoneNumber (
    id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255),
	createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE city (
	id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR (255)
);

CREATE TABLE address (
	id INT PRIMARY KEY AUTO_INCREMENT,
    idCity INT NOT NULL,
    FOREIGN KEY (idCity) REFERENCES city(id),
    neighborhood VARCHAR (255) NOT NULL,
    street VARCHAR (255) NOT NULL
);

CREATE TABLE people (
    id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255) NOT NULL,
    lastName VARCHAR(255),
    birthday DATE,
    document INT UNIQUE,
    idAddress INT NOT NULL,
    FOREIGN KEY (idAddress) REFERENCES address(id),
    idTypeDocument INT DEFAULT NULL,
    FOREIGN KEY (idTypeDocument) REFERENCES type_document(id),
    idUser INT,
    FOREIGN KEY (idUser) REFERENCES users(id),
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE people_phone (
    id INT PRIMARY KEY AUTO_INCREMENT,
    idPerson INT NOT NULL,
    idTypePhone INT NOT NULL,
    `number`VARCHAR(255) NOT NULL,
    FOREIGN KEY (idPerson) REFERENCES people(id),
    FOREIGN KEY (idTypePhone) REFERENCES typePhoneNumber(id),
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE usersRoles(
	id INT PRIMARY KEY AUTO_INCREMENT,
	idUser INT,
	FOREIGN KEY (idUser) REFERENCES users(id),
	idRole INT,
	FOREIGN KEY (idRole) REFERENCES roles(id),
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE productCategories (
    id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255) UNIQUE NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE products (
    id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255) NOT NULL,
    details TEXT,
    price DECIMAL(20, 0) NOT NULL,
    idProductCategory INT,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (idProductCategory) REFERENCES productCategories(id)
);

CREATE TABLE reserveStates (
    id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR(255) UNIQUE NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE reserves (
    id INT PRIMARY KEY AUTO_INCREMENT,
    idState INT,
    `time` TIME,  
    dateReserve DATE,
    idUser INT,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT, 
    updated_by INT,  
    FOREIGN KEY (idUser) REFERENCES users(id),
    FOREIGN KEY (idState) REFERENCES reserveStates(id)
);

CREATE TABLE paymentMethods (
	id INT PRIMARY KEY AUTO_INCREMENT,
    `name` VARCHAR (255) NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE statusPayment (
	id INT PRIMARY KEY AUTO_INCREMENT,
    `name`VARCHAR (255) NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE paymentTransactionInformation (
	id INT PRIMARY KEY AUTO_INCREMENT,
    idCustomers INT NOT NULL,
    numberTarjet VARCHAR (255),
    idStatus INT NOT NULL,
    idPayMethods INT NOT NULL,
    idGatewayRecords INT,
    FOREIGN KEY (idPayMethods) REFERENCES paymentMethods(id),
    FOREIGN KEY (idStatus) REFERENCES statusPayment(id),
    FOREIGN KEY (idCustomers) REFERENCES users(id),
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE statusGateway(
	id INT PRIMARY KEY AUTO_INCREMENT,
    `name`VARCHAR (255) NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE paymentGatewayRecords (
    id INT AUTO_INCREMENT PRIMARY KEY,
    idTransaction INT NOT NULL, 
    idStatus INT NOT NULL,
    gateway_response TEXT NOT NULL, 
    transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    transaction_reference VARCHAR(255) NOT NULL,
    error_code VARCHAR(20) DEFAULT NULL, -- CÃ³digo de error si lo hay
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (idTransaction) REFERENCES paymentTransactionInformation(id),
    FOREIGN KEY (idStatus) REFERENCES statusGateway(id)
);

CREATE TABLE discount (
id INT PRIMARY KEY AUTO_INCREMENT,
total INT DEFAULT 0
);

CREATE TABLE payment (
	id INT AUTO_INCREMENT PRIMARY KEY,
	idTransaction INT NOT NULL,
	totalPay DECIMAL(20, 2) NOT NULL,
    idDiscount INT,
    FOREIGN KEY (idTransaction) REFERENCES paymentTransactionInformation(id),
    FOREIGN KEY (idDiscount) REFERENCES discount(id),
	createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
	updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE reserveProducts (
    id INT PRIMARY KEY AUTO_INCREMENT,
    idReserve INT,
    idProduct INT,
    quantity INT NOT NULL,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (idReserve) REFERENCES reserves(id),
    FOREIGN KEY (idProduct) REFERENCES products(id)
    );

CREATE TABLE invoice (
	id INT AUTO_INCREMENT PRIMARY KEY,
    invoiceDate DATETIME,
    idCustomers INT NOT NULL,
	idEmployees INT NOT NULL,
    idDetails INT NOT NULL,
	FOREIGN KEY (idCustomers) REFERENCES users(id),
    FOREIGN KEY (idEmployees) REFERENCES users(id),
    FOREIGN kEY (idDetails) REFERENCES reserveProducts(id),
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);



